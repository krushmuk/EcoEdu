/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/SWOLrpJYYc9
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { useEffect } from 'react';
import { Label } from "@/components/ui/label"
import { Select, SelectTrigger, SelectValue, SelectContent, SelectGroup, SelectItem } from "@/components/ui/select"
import {beautify} from '@/back_config'

export function MultiselectField() {
  const [selectedOptions, setSelectedOptions] = useState([])
  const [optionInput, setOptionInput] = useState([])
  const handleOptionSelect = (option) => {
    if (selectedOptions.includes(option)) {
      setSelectedOptions(selectedOptions.filter((o) => o !== option))
    } else {
      setSelectedOptions([...selectedOptions, option])
    }
  }
  // useEffect(() => {  
  //   if (selectedOptions.includes(option)) {
  //     setSelectedOptions(selectedOptions.filter((o) => o !== option))
  //   } else {
  //     setSelectedOptions([...selectedOptions, option])
  //   }
  // }, [optionInput])
  const options = Object.values(beautify)
  return (
    <div className="grid gap-2">
      <Label htmlFor="options" className="text-base font-medium">
        Select Options
      </Label>
      <div className="flex flex-wrap items-center gap-2">
        {selectedOptions.map((option) => (
          <div key={option} className="rounded-full bg-primary px-3 py-1 text-sm font-medium text-primary-foreground">
            {option}
            <button
              type="button"
              className="ml-2 -mr-1 inline-flex h-4 w-4 items-center justify-center rounded-full text-primary-foreground hover:bg-primary/20"
              onClick={() => handleOptionSelect(option)}
            >
              <XIcon className="h-3 w-3" />
            </button>
          </div>
        ))}
        <Select multiple={true} value={optionInput} onValueChange={handleOptionSelect} className="flex-1" name="categories" >
          <SelectTrigger id="options" className="w-full" aria-label="Select options">
            <SelectValue placeholder="Select options" />
          </SelectTrigger>
          <SelectContent className="w-full">
            <SelectGroup>
              {options.map((option) => (
                <SelectItem key={option} value={option}>
                  {option}
                </SelectItem>
              ))}
            </SelectGroup>
          </SelectContent>
        </Select>
      </div>
    </div>
  )
}

function XIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  )
}
